import { catchError, getToken } from "../utils/helper";
import client from "./client";


// sending   HTTP request with the Bearer Token 
// Bearer Token is a cryptic string typically generated by the server 
// The client must send this Bearer Token in the Authorization header on every request it makes to obtain a protected resource


//......................................  Add Review    .....................................................

export const addReview = async (courseId, reviewData) => {
  const token = getToken();
  try {
    const { data } = await client.post(`/review/add/${courseId}`, reviewData, {
      headers: {
        authorization: "Bearer " + token,
      },
    });
    return data;
  } catch (error) {
    return catchError(error);
  }
};

//......................................  Delete Review    .....................................................

export const deleteReview = async (reviewId) => {
  const token = getToken();
  try {
    const { data } = await client.delete(`/review/${reviewId}`, {
      headers: {
        authorization: "Bearer " + token,
      },
    });
    return data;
  } catch (error) {
    return catchError(error);
  }
};

//......................................  Update Review    .....................................................

export const updateReview = async (reviewId, reviewData) => {
  const token = getToken();
  try {
    const { data } = await client.patch(`/review/${reviewId}`, reviewData, {
      headers: {
        authorization: "Bearer " + token,
      },
    });
    return data;
  } catch (error) {
    return catchError(error);
  }
};

//......................................  Get Review By Course   .....................................................

export const getReviewByCourse = async (courseId) => {
  try {
    const { data } = await client(`/review/get-reviews-by-course/${courseId}`);
    return data;
  } catch (error) {
    return catchError(error);
  }
};
